{"ast":null,"code":"var _jsxFileName = \"/Users/analeasterling/Desktop/LaunchCode-Projects/LiftOff/Parks-N-Rec/src/main/ui/src/App.js\",\n    _s = $RefreshSig$();\n\nimport ParkNotes from \"./components/Notes/ParkNotes\";\nimport { useState } from \"react\";\nimport { v4 as uuid } from 'uuid';\nimport \"./App.css\";\nimport { Header } from \"./components/Header/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const unique_id = uuid();\n\n  const addNote = text => {\n    const date = new Date();\n    const newNote = {\n      id: unique_id,\n      text: text,\n      date: date.toLocaleDateString()\n    }; //spread operator (...) expands an array into its elements. Will create new array instead of updating old array\n\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ParkNotes, {\n      notes: notes,\n      handleAddNote: addNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"GQLmJKrKSWtt27ULSmYSMpXke/c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ParkNotes","useState","v4","uuid","Header","App","notes","setNotes","unique_id","addNote","text","date","Date","newNote","id","toLocaleDateString","newNotes"],"sources":["/Users/analeasterling/Desktop/LaunchCode-Projects/LiftOff/Parks-N-Rec/src/main/ui/src/App.js"],"sourcesContent":["import ParkNotes from \"./components/Notes/ParkNotes\";\nimport { useState } from \"react\";\nimport { v4 as uuid } from 'uuid';\nimport \"./App.css\";\nimport { Header } from \"./components/Header/Header\";\n\nconst App = () => {\n\tconst [notes, setNotes] = useState([]);\n\tconst unique_id = uuid();\n\tconst addNote = (text) => {\n\t\tconst date = new Date();\n\t\tconst newNote = {\n\t\t    id: unique_id,\n\t\t\ttext: text,\n\t\t\tdate: date.toLocaleDateString(),\n\t\t};\n\t\t//spread operator (...) expands an array into its elements. Will create new array instead of updating old array\n\t\tconst newNotes = [...notes, newNote];\n\t\tsetNotes(newNotes);\n\t};\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Header />\n\t\t\t<ParkNotes notes={notes} handleAddNote={addNote} />\n\t\t</div>\n\t);\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,8BAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,OAAO,WAAP;AACA,SAASC,MAAT,QAAuB,4BAAvB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAMO,SAAS,GAAGL,IAAI,EAAtB;;EACA,MAAMM,OAAO,GAAIC,IAAD,IAAU;IACzB,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;IACA,MAAMC,OAAO,GAAG;MACZC,EAAE,EAAEN,SADQ;MAEfE,IAAI,EAAEA,IAFS;MAGfC,IAAI,EAAEA,IAAI,CAACI,kBAAL;IAHS,CAAhB,CAFyB,CAOzB;;IACA,MAAMC,QAAQ,GAAG,CAAC,GAAGV,KAAJ,EAAWO,OAAX,CAAjB;IACAN,QAAQ,CAACS,QAAD,CAAR;EACA,CAVD;;EAYA,oBACC;IAAK,SAAS,EAAC,WAAf;IAAA,wBACC,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADD,eAEC,QAAC,SAAD;MAAW,KAAK,EAAEV,KAAlB;MAAyB,aAAa,EAAEG;IAAxC;MAAA;MAAA;MAAA;IAAA,QAFD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAMA,CArBD;;GAAMJ,G;;KAAAA,G;AAuBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}