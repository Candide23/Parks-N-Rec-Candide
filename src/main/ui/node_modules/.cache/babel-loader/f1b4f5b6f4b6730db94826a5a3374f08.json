{"ast":null,"code":"var _jsxFileName = \"/Users/cham/Documents/Parks-N-Rec/src/main/ui/src/context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = `https://developer.nps.gov/api/v1/parks?StateCode=\"all\"&limit=468&api_key=ABWZc9qTpwdEzXasClnO4MLAyxYugwYZeNj0GFxi`;\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"a\");\n  const [parks, setParks] = useState([]);\n  const fetchParks = useCallback(async () => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(`${url}`);\n      const datas = await response.json();\n      console.log(datas);\n      const {\n        data\n      } = datas;\n\n      if (data) {\n        const newParks = data.map(item => {\n          const {\n            id,\n            url,\n            fullName,\n            parkCode,\n            description,\n            images\n          } = item;\n          return {\n            idPark: id,\n            name: fullName,\n            code: parkCode,\n            detaisl: description,\n            image: images\n          };\n        });\n        setParks(newParks);\n      } else {\n        setParks([]);\n      }\n\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  }, [searchTerm]);\n  useEffect(() => {\n    fetchParks();\n  }, [searchTerm, fetchParks]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      loading,\n      parks,\n      searchTerm,\n      setSearchTerm\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}; // make sure use\n\n\n_s(AppProvider, \"N0+EiF77MEfFJarFizNqssSfp4o=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useCallback","url","AppContext","createContext","AppProvider","children","loading","setLoading","searchTerm","setSearchTerm","parks","setParks","fetchParks","response","fetch","datas","json","console","log","data","newParks","map","item","id","fullName","parkCode","description","images","idPark","name","code","detaisl","image","error","useGlobalContext"],"sources":["/Users/cham/Documents/Parks-N-Rec/src/main/ui/src/context.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { useCallback } from \"react\";\n\nconst url = `https://developer.nps.gov/api/v1/parks?StateCode=\"all\"&limit=468&api_key=ABWZc9qTpwdEzXasClnO4MLAyxYugwYZeNj0GFxi`;\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"a\");\n  const [parks, setParks] = useState([]);\n\n  const fetchParks = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`${url}`);\n\n      const datas = await response.json();\n      console.log(datas);\n      const { data } = datas;\n      if (data) {\n        const newParks = data.map((item) => {\n          const { id, url, fullName, parkCode, description, images } = item;\n\n          return {\n            idPark: id,\n            name: fullName,\n            code: parkCode,\n            detaisl: description,\n            image: images,\n          };\n        });\n        setParks(newParks);\n      } else {\n        setParks([]);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  }, [searchTerm]);\n  useEffect(() => {\n    fetchParks();\n  }, [searchTerm, fetchParks]);\n  return (\n    <AppContext.Provider\n      value={{ loading, parks, searchTerm, setSearchTerm }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAEA,MAAMC,GAAG,GAAI,mHAAb;AACA,MAAMC,UAAU,gBAAGN,KAAK,CAACO,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACpC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,GAAD,CAA5C;EACA,MAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;EAEA,MAAMe,UAAU,GAAGZ,WAAW,CAAC,YAAY;IACzCO,UAAU,CAAC,IAAD,CAAV;;IACA,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEb,GAAI,EAAR,CAA5B;MAEA,MAAMc,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAApB;MACAC,OAAO,CAACC,GAAR,CAAYH,KAAZ;MACA,MAAM;QAAEI;MAAF,IAAWJ,KAAjB;;MACA,IAAII,IAAJ,EAAU;QACR,MAAMC,QAAQ,GAAGD,IAAI,CAACE,GAAL,CAAUC,IAAD,IAAU;UAClC,MAAM;YAAEC,EAAF;YAAMtB,GAAN;YAAWuB,QAAX;YAAqBC,QAArB;YAA+BC,WAA/B;YAA4CC;UAA5C,IAAuDL,IAA7D;UAEA,OAAO;YACLM,MAAM,EAAEL,EADH;YAELM,IAAI,EAAEL,QAFD;YAGLM,IAAI,EAAEL,QAHD;YAILM,OAAO,EAAEL,WAJJ;YAKLM,KAAK,EAAEL;UALF,CAAP;QAOD,CAVgB,CAAjB;QAWAhB,QAAQ,CAACS,QAAD,CAAR;MACD,CAbD,MAaO;QACLT,QAAQ,CAAC,EAAD,CAAR;MACD;;MACDJ,UAAU,CAAC,KAAD,CAAV;IACD,CAvBD,CAuBE,OAAO0B,KAAP,EAAc;MACdhB,OAAO,CAACC,GAAR,CAAYe,KAAZ;MACA1B,UAAU,CAAC,KAAD,CAAV;IACD;EACF,CA7B6B,EA6B3B,CAACC,UAAD,CA7B2B,CAA9B;EA8BAT,SAAS,CAAC,MAAM;IACda,UAAU;EACX,CAFQ,EAEN,CAACJ,UAAD,EAAaI,UAAb,CAFM,CAAT;EAGA,oBACE,QAAC,UAAD,CAAY,QAAZ;IACE,KAAK,EAAE;MAAEN,OAAF;MAAWI,KAAX;MAAkBF,UAAlB;MAA8BC;IAA9B,CADT;IAAA,UAGGJ;EAHH;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CA7CD,C,CA8CA;;;GA9CMD,W;;KAAAA,W;AA+CN,OAAO,MAAM8B,gBAAgB,GAAG,MAAM;EAAA;;EACpC,OAAOpC,UAAU,CAACI,UAAD,CAAjB;AACD,CAFM;;IAAMgC,gB;;AAIb,SAAShC,UAAT,EAAqBE,WAArB"},"metadata":{},"sourceType":"module"}